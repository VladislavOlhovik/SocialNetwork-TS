{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","id","name","Message","message","maxLength","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","require","Dialogs","dialogs","dialogsItems","dialogsPage","dialogsData","map","el","key","messages","messagesData","values","addMessage","newMessage","DialogsContainer","compose","connect","state","dispatch","addMessageActionCreator","WithAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,sFCY/HC,EARI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKL,EAAMM,QCEzCC,EANC,SAACP,GACb,OACI,yBAAKC,UAAWC,IAAEM,SAAUR,EAAMQ,U,iCC8BpCC,EAAYC,YAAiB,IAkB5BC,EAAmBC,YAA+B,CAAEC,KAAM,oBAAvCD,EAhB4C,SAACZ,GACnE,OACI,0BAAMc,SAAUd,EAAMe,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,YAAY,qBACZC,SAAU,CAACC,IAASZ,GACpBH,KAAK,gBAEhB,6BACI,6CAQDgB,EA1CC,SAACtB,GAKb,OACI,yBAAKC,UAAWC,IAAEqB,SACd,yBAAKtB,UAAWC,IAAEsB,cACbxB,EAAMyB,YAAYC,YAAYC,KAAI,SAAAC,GAAE,OAAE,kBAAC,EAAD,CAAYC,IAAKD,EAAGvB,GAAIC,KAAMsB,EAAGtB,KAAMD,GAAIuB,EAAGvB,SAEzF,yBAAKJ,UAAWC,IAAE4B,UACb9B,EAAMyB,YAAYM,aAAaJ,KAAI,SAAAC,GAAE,OAAE,kBAAC,EAAD,CAASC,IAAKD,EAAGvB,GAAIG,QAASoB,EAAGpB,aACzE,kBAACG,EAAD,CAAkBG,SAXb,SAACkB,GACdhC,EAAMiC,WAAWD,EAAOE,kB,iCCI1BC,EAAmBC,YACrBC,aAZoB,SAACC,GACrB,MAAM,CACFb,YAAaa,EAAMb,gBAGA,SAACc,GACxB,MAAM,CACFN,WAAY,SAACC,GAAD,OAAsBK,EAASC,YAAwBN,SAMvEO,IAFqBL,CAGvBd,GAEaa","file":"static/js/3.05addaf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__T1sQ8\",\"dialogsItems\":\"Dialogs_dialogsItems__1cdap\",\"active\":\"Dialogs_active__2zRni\",\"messages\":\"Dialogs_messages__2znBk\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DialogsDataType } from '../../../Redux/dialogs-reducer';\r\n\r\nconst DialogItem = (props:DialogsDataType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { MessagesDataType } from '../../../Redux/dialogs-reducer';\r\n\r\nconst Message = (props:MessagesDataType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { DialogsPageType } from '../../Redux/dialogs-reducer';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, require } from '../../utils/validadors';\r\n\r\n\r\ntype dialogsPropsType={\r\n    dialogsPage:DialogsPageType\r\n    addMessage:(newMessage: string)=>void\r\n}\r\nconst Dialogs = (props:dialogsPropsType) => {\r\n    const addMessage=(values:DialogsFormDataType)=>{\r\n        props.addMessage(values.newMessage)\r\n    }\r\n    \r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {props.dialogsPage.dialogsData.map(el=><DialogItem key={el.id} name={el.name} id={el.id}/>)}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {props.dialogsPage.messagesData.map(el=><Message key={el.id} message={el.message}/>)}\r\n                <DialogsReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype DialogsFormDataType = {\r\n    newMessage: string\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst DialogsForm: React.FC<InjectedFormProps<DialogsFormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       placeholder='Enter your message'\r\n                       validate={[require, maxLength]}\r\n                       name='newMessage'/>\r\n            </div> \r\n            <div>\r\n                <button>sent</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst  DialogsReduxForm = reduxForm<DialogsFormDataType>({ form: 'dialogAddMassage' })(DialogsForm)\r\n\r\nexport default Dialogs","import Dialogs from './Dialogs'\r\nimport { addMessageActionCreator } from '../../Redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { DialogsActionType } from '../../Redux/dialogs-reducer';\r\nimport { RootType } from '../../Redux/redux-store';\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { ComponentType } from 'react';\r\n\r\nconst mapStateToProps = (state:RootType)=>{\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:(action:DialogsActionType)=>void)=>{\r\n    return{\r\n        addMessage: (newMessage: string)=>dispatch(addMessageActionCreator(newMessage)),\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose<ComponentType>(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs) \r\n\r\nexport default DialogsContainer"],"sourceRoot":""}